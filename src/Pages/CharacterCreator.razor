@page "/character-creator"
@attribute [Authorize]
@inject HttpClient Http

<PageTitle>OSRlib | Party builder</PageTitle>

<h1>Build your party</h1>

@* <div>
    <ol>
        <li>Enter a name for your character.</li>
        <li>Roll their abilities as many times as you like.</li>
        <li>Select the <b>Add to party</b> button.</li>
    </ol>
</div> *@

<hr style="width:50%;text-align:left;margin-left:0">

<EditForm Model="_character" OnValidSubmit="AddCharacterToParty">

<label>Name:
    <InputText @bind-Value="_character.Name" PlaceHolder="Enter character name"></InputText>
</label>
<p/>

<div style="display: flex; justify-content: start; gap: 20px">
    <div>
        <label>Hit points:
            @_character.HitPoints / @_character.MaxHitPoints
        </label>
        <br/>
        <label>Defense:
            @_character.Defense
        </label>
    </div>
    <div>
        <label>Experience points:
            @_character.ExperiencePoints
        </label>
        <br/>
        <label>Weapon:
            @_character.ActiveWeapon.ToString()
        </label>
    </div>
</div>
<p/>

<div>
    <label>Abilities:
        <ul>
            @foreach (Ability ability in _character.Abilities)
            {
                <li>@ability.ToString()</li>
            }
        </ul>
    </label>
</div>

<div>
    <span><button type="button" class="btn btn-primary" @onclick="RollAbilities">Roll abilities</button></span>
    <span><button type="submit" class="btn btn-primary">Add to party</button></span>
</div>

</EditForm>
<p/>
<hr style="height:2px;border-width:0;color:gray;background-color:gray">
<div>
    <h2>Party roster</h2>

    <div>
        <ul>
            @if (_party.Members.Count > 0)
            {
                @foreach (Being character in _party.Members)
                {
                    <li>@character.ToString()</li>
                }
            }
            else
            {
                <em>No characters in party.</em>
            }
        </ul>
    </div>
</div>

@code {
    Party? _party;
    Being? _character;

    protected override void OnInitialized()
    {
        if (_party == null)
        {
            _party = new Party();
        }

        if (_character == null)
        {
            InitCharacter();
        }

        base.OnInitialized();
    }

    private void AddCharacterToParty()
    {
        //string result = await Http.GetStringAsync("http://localhost:5207/Game/RollDice?numDice=1&numSides=20");
        //int.TryParse(result, out rollResult);
        _party.AddPartyMember(_character);

        InitCharacter();
    }

    private void InitCharacter()
    {
        _character = new Being
            {
                Name = "",
                Defense = 10,
                MaxHitPoints = DiceRoll.RollDice(new DiceHand(2, DieType.d6)),
                ActiveWeapon = new Weapon { Name = "Fists", Type = WeaponType.Melee, DamageDie = new DiceHand(1, DieType.d2) }
            };
            _character.HitPoints = _character.MaxHitPoints;
            _character.RollAbilities();
    }

    private void RollAbilities()
    {
        _character.RollAbilities();
    }
}
